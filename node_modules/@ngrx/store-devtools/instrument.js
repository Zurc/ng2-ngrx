"use strict";
var store_1 = require('@ngrx/store');
var core_1 = require('@angular/core');
var devtools_1 = require('./devtools');
var config_1 = require('./config');
var extension_1 = require('./extension');
function _createReduxDevtoolsExtension() {
    if (typeof window !== 'undefined' && window.devToolsExtension) {
        return window.devtoolsExtension;
    }
    return null;
}
exports._createReduxDevtoolsExtension = _createReduxDevtoolsExtension;
function _createState(devtools) {
    return devtools.state;
}
exports._createState = _createState;
function _createReducer(dispatcher, reducer) {
    return new store_1.Reducer(dispatcher, reducer);
}
exports._createReducer = _createReducer;
var StoreDevtoolsModule = (function () {
    function StoreDevtoolsModule() {
    }
    StoreDevtoolsModule.instrumentStore = function (_options) {
        if (_options === void 0) { _options = {}; }
        var DEFAULT_OPTIONS = {
            monitor: function () { return null; }
        };
        var options = Object.assign({}, DEFAULT_OPTIONS, _options);
        if (options.maxAge && options.maxAge < 2) {
            throw new Error("Devtools 'maxAge' cannot be less than 2, got " + options.maxAge);
        }
        return {
            ngModule: StoreDevtoolsModule,
            providers: [
                {
                    provide: store_1.State,
                    deps: [devtools_1.StoreDevtools],
                    useFactory: _createState
                },
                {
                    provide: store_1.Reducer,
                    deps: [devtools_1.DevtoolsDispatcher, store_1.INITIAL_REDUCER],
                    useFactory: _createReducer
                },
                { provide: config_1.STORE_DEVTOOLS_CONFIG, useValue: options }
            ]
        };
    };
    /** @nocollapse */
    StoreDevtoolsModule.decorators = [
        { type: core_1.NgModule, args: [{
                    imports: [
                        store_1.StoreModule
                    ],
                    providers: [
                        extension_1.DevtoolsExtension,
                        devtools_1.DevtoolsDispatcher,
                        devtools_1.StoreDevtools,
                        {
                            provide: extension_1.REDUX_DEVTOOLS_EXTENSION,
                            useFactory: _createReduxDevtoolsExtension
                        }
                    ]
                },] },
    ];
    return StoreDevtoolsModule;
}());
exports.StoreDevtoolsModule = StoreDevtoolsModule;
