import { StoreModule, State, INITIAL_REDUCER, Reducer } from '@ngrx/store';
import { NgModule } from '@angular/core';
import { StoreDevtools, DevtoolsDispatcher } from './devtools';
import { STORE_DEVTOOLS_CONFIG } from './config';
import { DevtoolsExtension, REDUX_DEVTOOLS_EXTENSION } from './extension';
export function _createReduxDevtoolsExtension() {
    if (typeof window !== 'undefined' && window.devToolsExtension) {
        return window.devtoolsExtension;
    }
    return null;
}
export function _createState(devtools) {
    return devtools.state;
}
export function _createReducer(dispatcher, reducer) {
    return new Reducer(dispatcher, reducer);
}
export var StoreDevtoolsModule = (function () {
    function StoreDevtoolsModule() {
    }
    StoreDevtoolsModule.instrumentStore = function (_options) {
        if (_options === void 0) { _options = {}; }
        var DEFAULT_OPTIONS = {
            monitor: function () { return null; }
        };
        var options = Object.assign({}, DEFAULT_OPTIONS, _options);
        if (options.maxAge && options.maxAge < 2) {
            throw new Error("Devtools 'maxAge' cannot be less than 2, got " + options.maxAge);
        }
        return {
            ngModule: StoreDevtoolsModule,
            providers: [
                {
                    provide: State,
                    deps: [StoreDevtools],
                    useFactory: _createState
                },
                {
                    provide: Reducer,
                    deps: [DevtoolsDispatcher, INITIAL_REDUCER],
                    useFactory: _createReducer
                },
                { provide: STORE_DEVTOOLS_CONFIG, useValue: options }
            ]
        };
    };
    /** @nocollapse */
    StoreDevtoolsModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        StoreModule
                    ],
                    providers: [
                        DevtoolsExtension,
                        DevtoolsDispatcher,
                        StoreDevtools,
                        {
                            provide: REDUX_DEVTOOLS_EXTENSION,
                            useFactory: _createReduxDevtoolsExtension
                        }
                    ]
                },] },
    ];
    return StoreDevtoolsModule;
}());
