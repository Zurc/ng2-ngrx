import { State, Reducer } from '@ngrx/store';
import { OpaqueToken } from '@angular/core';
import { Observable } from 'rxjs/Observable';
import { StoreDevtools, DevtoolsDispatcher } from './devtools';
import { StoreDevtoolsConfig } from './config';
export declare function _createReduxDevtoolsExtension(): any;
export declare function _createState(devtools: StoreDevtools): Observable<any>;
export declare function _createReducer(dispatcher: DevtoolsDispatcher, reducer: any): Reducer;
export declare class StoreDevtoolsModule {
    static instrumentStore(_options?: StoreDevtoolsConfig): {
        ngModule: typeof StoreDevtoolsModule;
        providers: ({
            provide: typeof State;
            deps: typeof StoreDevtools[];
            useFactory: (devtools: StoreDevtools) => Observable<any>;
        } | {
            provide: typeof Reducer;
            deps: (typeof DevtoolsDispatcher | OpaqueToken)[];
            useFactory: (dispatcher: DevtoolsDispatcher, reducer: any) => Reducer;
        } | {
            provide: OpaqueToken;
            useValue: {} & StoreDevtoolsConfig;
        })[];
    };
}
