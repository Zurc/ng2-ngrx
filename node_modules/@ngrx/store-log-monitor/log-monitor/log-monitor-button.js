"use strict";
var core_1 = require('@angular/core');
var LogMonitorButtonComponent = (function () {
    function LogMonitorButtonComponent() {
        this.action = new core_1.EventEmitter();
    }
    LogMonitorButtonComponent.prototype.handleAction = function ($event) {
        if (!this.disabled) {
            this.action.next({});
        }
        $event.stopPropagation();
        return false;
    };
    /** @nocollapse */
    LogMonitorButtonComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'log-monitor-button',
                    template: "\n    <ng-content></ng-content>\n  ",
                    styles: ["\n    :host{\n      flex-grow: 1;\n      display: inline-block;\n      font-family: 'monaco', 'Consolas', 'Lucida Console', monospace;\n      cursor: pointer;\n      font-weight: bold;\n      border-radius: 3px;\n      padding: 4px 8px;\n      margin: 5px 3px 5px 3px;\n      font-size: 0.8em;\n      color: white;\n      text-decoration: none;\n      background-color: #4F5A65;\n    }\n\n    :host.disabled{\n      opacity: 0.2;\n      cursor: text;\n      background-color: transparent;\n    }\n  "]
                },] },
    ];
    /** @nocollapse */
    LogMonitorButtonComponent.propDecorators = {
        'disabled': [{ type: core_1.HostBinding, args: ['class.disabled',] }, { type: core_1.Input },],
        'action': [{ type: core_1.Output },],
        'handleAction': [{ type: core_1.HostListener, args: ['click', ['$event'],] },],
    };
    return LogMonitorButtonComponent;
}());
exports.LogMonitorButtonComponent = LogMonitorButtonComponent;
